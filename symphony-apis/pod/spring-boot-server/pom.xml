<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~ Copyright 2016 The Symphony Software Foundation
  ~
  ~ Licensed to The Symphony Software Foundation (SSF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.symphonyoss.symphony</groupId>
	<artifactId>symphony-pod-server</artifactId>
	<name>Symphony POD Service Server</name>
	<version>0.1.0-SNAPSHOT</version>


	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.2.RELEASE</version>
	</parent>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<docker.image.prefix>markit</docker.image.prefix>
		<docker.image.base>java:8</docker.image.base>

		<project-lombok.version>1.16.6</project-lombok.version>
		<swagger-core-version>1.5.9</swagger-core-version>
		<springfox.version>2.3.1</springfox.version>
		<java.version>1.8</java.version>
		<symphony-pod.version>1.0-SNAPSHOT</symphony-pod.version>
		<spring-boot.version>1.3.2.RELEASE</spring-boot.version>
		<mysql-connector-java.version>5.1.38</mysql-connector-java.version>
		<checkstyle.skip>true</checkstyle.skip>
		<spring-security-oauth2.version>2.0.8.RELEASE</spring-security-oauth2.version>
		<spring-security-jwt.version>1.0.3.RELEASE</spring-security-jwt.version>
		<disable.checks>true</disable.checks>

	</properties>

	<!-- <dependencyManagement> <dependencies> <dependency> <groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-dependencies</artifactId> <version>${spring-boot.version}</version>
		<type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement> -->

	<dependencies>
		<dependency>
			<groupId>org.symphonyoss.symphony</groupId>
			<artifactId>symphony-pod-spring-interfaces</artifactId>
			<version>${symphony-pod.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId>
			</dependency> -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<!-- <version>${mysql-connector-java.version}</version> -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>


		<!-- Swagger -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>${swagger-core-version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${project-lombok.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
    		<groupId>org.zeroturnaround</groupId>
    		<artifactId>zt-zip</artifactId>
    		<version>1.9</version>
    		<type>jar</type>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
<!--
			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>
				<configuration>
				    <images>
				    	<image>
							<name>${docker.image.prefix}/${project.artifactId}</name>
							<alias>${project.artifactId}</alias>
							<build>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
								<from>${docker.image.base}</from>
								<assembly>
									<basedir>/tools</basedir>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<cmd>(cd tools; java -jar ${project.artifactId}.jar)</cmd>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker:build</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>docker:push</id>
						<phase>install</phase>
						<goals>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
-->
		</plugins>
	</build>

</project>
